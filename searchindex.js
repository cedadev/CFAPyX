Search.setIndex({"docnames": ["backend", "datastore", "fragments", "groups", "index", "inspiration", "options", "overview", "partition", "wrapper"], "filenames": ["backend.rst", "datastore.rst", "fragments.rst", "groups.rst", "index.rst", "inspiration.rst", "options.rst", "overview.rst", "partition.rst", "wrapper.rst"], "titles": ["Xarray Backend Entrypoint for CFAPyX", "CFA Datastore in Xarray", "CFAPyX Terminology", "Handling netCDF4 Groups in CFAPyX", "CFAPyX Documentation", "CFA and Distributed Data", "CFAPyX Usage and Options", "The CFA-Xarray Engine", "CFA Partitions", "CFA Array Wrapper Classes"], "terms": {"open_cfa_dataset": [0, 7], "filename_or_obj": 0, "drop_vari": 0, "none": [0, 1, 8, 9], "mask_and_scal": 0, "decode_tim": 0, "concat_charact": 0, "decode_coord": 0, "use_cftim": 0, "decode_timedelta": 0, "cfa_opt": [0, 1, 6, 9], "active_opt": [0, 1, 9], "group": [0, 1, 4, 7, 9], "sourc": [0, 1, 2, 3, 4, 5, 7, 8, 9], "top": [0, 5], "level": [0, 2, 5, 7], "function": [0, 2, 5, 9], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9], "open": [0, 1, 4, 5, 7, 8], "cfa": [0, 2, 3, 4, 6], "dataset": [0, 1, 3, 4, 5, 7], "us": [0, 1, 2, 3, 4, 6, 7, 9], "creat": [0, 1, 2, 7, 8, 9], "datastor": [0, 4], "from": [0, 1, 2, 3, 4, 8, 9], "provid": [0, 1, 2, 4, 5, 6, 7, 8], "pass": 0, "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9], "storebackendentrypoint": 0, "an": [0, 1, 2, 3, 4, 5, 7, 8, 9], "most": [0, 2, 7], "paramet": [0, 1, 3, 5, 6, 9], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 9], "handl": [0, 7, 9], "so": [0, 1, 2, 3, 5, 7], "onli": [0, 2, 3, 5, 7], "relev": 0, "ones": 0, "describ": [0, 9], "here": [0, 1, 2, 9], "str": [0, 1, 9], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9], "path": [0, 9], "netcdf": [0, 1, 3, 4, 5, 7], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "dict": [0, 9], "A": [0, 1, 2, 5], "set": [0, 1, 3, 5, 7, 9], "kwarg": [0, 8, 9], "addit": [0, 1, 2, 4, 6, 7], "configur": 0, "current": [0, 3, 4, 5, 6, 8], "implement": [0, 2, 7], "substitut": [0, 6], "decode_cfa": [0, 6], "bool": [0, 1], "name": [0, 1, 9], "can": [0, 2, 3, 4, 5, 6, 9], "specif": [0, 1, 2, 7, 9], "inherit": [0, 1, 2, 7], "both": [0, 2, 3, 5, 8], "global": [0, 3, 5, 7], "dimens": [0, 2, 3, 5, 7, 9], "attribut": [0, 1, 2, 3, 7, 8, 9], "return": [0, 1, 3, 7, 8, 9], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "compos": 0, "dataarrai": 0, "repres": [0, 2, 9], "differ": [0, 2, 5, 9], "variabl": [0, 1, 2, 3, 5, 6, 7, 8, 9], "aggreg": [0, 1, 2, 3, 6, 7], "decod": [0, 1, 3, 4, 6, 7, 9], "unless": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "fals": [0, 1, 6], "class": [0, 1, 2, 3, 7, 8], "cfanetcdfbackendentrypoint": [0, 7], "open_dataset": [0, 2, 6, 7], "complet": [0, 8], "represent": 0, "includ": [0, 5, 6, 7, 8, 9], "expand": [0, 2], "proper": [0, 2, 5, 8], "arrai": [0, 2, 5, 7, 8], "cfastorebackendentrypoint": 0, "cfa_xarray_stor": 0, "true": [0, 6], "use_act": 0, "take": [0, 2, 5, 6], "type": 0, "abstractdatastor": 0, "obj": [0, 1, 9], "load": [0, 1, 3, 4, 5, 7], "cfapyx": [1, 5, 7, 8, 9], "cfadatastor": [1, 3, 7], "manag": 1, "mode": 1, "lock": 1, "combinedlock": 1, "serializablelock": 1, "28bf23f4": 1, "b3aa": 1, "4dd1": 1, "83ee": 1, "c8cc8c8b5550": 1, "4ecb6b88": 1, "1b5c": 1, "4d08": 1, "ad86": 1, "afcbe49efa27": 1, "autoclos": 1, "contain": [1, 2, 5, 7, 8, 9], "all": [1, 2, 3, 5, 7, 8, 9], "unpack": 1, "routin": 1, "directli": [1, 2, 5, 7], "relat": [1, 2, 7, 9], "netcdf4datastor": [1, 7], "ha": [1, 2, 5, 7, 8], "__init__": [1, 9], "method": [1, 2, 5, 7, 8, 9], "cannot": 1, "easili": 1, "overriden": 1, "properti": [1, 8, 9], "instead": [1, 2, 5], "mai": [1, 2, 5, 6, 7, 8, 9], "un": 1, "time": 1, "privat": [1, 8, 9], "option": [1, 2, 4, 9], "standard": [1, 3, 5], "perform_decod": 1, "array_shap": 1, "agg_data": 1, "public": 1, "involv": 1, "extract": [1, 3, 8], "inform": [1, 5, 9], "assembl": 1, "requir": [1, 2, 3, 5, 6, 7, 8, 9], "actual": [1, 7], "get_vari": [1, 7], "fetch": [1, 5], "netcdf4": [1, 4, 7], "perform": [1, 5, 6, 7, 8], "some": [1, 2, 7, 9], "necessari": [1, 2], "d": [1, 3, 6], "now": [1, 2, 5, 7], "groupeddatasetwrapp": 1, "flatten": 1, "structur": [1, 5, 7, 9], "allow": 1, "whole": [1, 2, 5, 7, 9], "tree": 1, "frozendict": [1, 7], "those": [1, 9], "depend": [1, 5, 7, 8], "get_attr": 1, "produc": [1, 5], "cfagroupwrapp": [1, 3], "case": [1, 2, 8], "nest": 1, "open_vari": 1, "var": 1, "either": [1, 3, 5, 7], "tupl": [1, 2, 9], "content": [1, 3], "where": [1, 2, 3, 5, 7], "determin": [1, 7, 8], "store": [1, 5, 7], "open_cfa_vari": [1, 7], "correct": [1, 9], "instanc": [1, 2, 8, 9], "construct": [1, 9], "data": [1, 2, 4, 8, 9], "fragmentarraywrapp": [1, 7, 9], "index": [1, 2, 4, 7, 9], "": [1, 2, 7], "lazilyindexedarrai": [1, 7], "list": [2, 7, 9], "throughout": 2, "equival": [2, 7], "cf": [2, 3, 6, 7], "convent": [2, 4, 5, 6, 7], "In": [2, 3, 8], "gener": [2, 5, 7, 9], "within": [2, 5, 6, 7, 9], "preserv": 2, "packag": [2, 3, 4, 7], "page": [2, 4, 7], "usag": [2, 4], "cover": [2, 5], "keyword": [2, 4, 6], "argument": [2, 4, 6], "xarrai": [2, 3, 4, 6, 9], "when": [2, 4, 5, 7, 9], "engin": [2, 4, 6], "enabl": [2, 4, 6], "develop": [2, 4, 8], "understand": 2, "mean": [2, 5, 7], "across": [2, 5, 8], "multipl": [2, 3, 5, 8], "three": [2, 6], "deal": [2, 5, 7], "portion": [2, 5], "context": 2, "therefor": [2, 7], "one": [2, 5, 7], "constitut": 2, "part": [2, 4], "refer": [2, 5, 7, 9], "dask": [2, 6, 7, 8, 9], "comput": [2, 4, 5, 7, 9], "user": [2, 5, 7], "If": [2, 7, 9], "specifi": [2, 9], "defin": [2, 5, 7, 8, 9], "individu": [2, 5, 7, 9], "simpli": 2, "each": [2, 5, 7, 8, 9], "altern": [2, 7], "scheme": 2, "given": [2, 5, 8], "match": 2, "step": 2, "must": [2, 8], "taken": 2, "optimis": [2, 5, 7], "retriev": [2, 3, 8, 9], "abov": [2, 5, 7], "figur": 2, "show": 2, "overlap": 2, "contribut": 2, "anoth": [2, 5], "ani": [2, 3, 5, 7, 9], "subsect": 2, "consid": 2, "shape": [2, 8, 9], "space": [2, 9], "see": [2, 6, 7], "below": [2, 8], "generalis": 2, "arraypartit": [2, 7, 8, 9], "certain": 2, "lazi": [2, 5, 7, 8, 9], "behaviour": [2, 8, 9], "For": [2, 7, 9], "would": [2, 5, 7], "sever": [2, 7], "chunkwrapp": [2, 7], "correspond": 2, "orang": 2, "These": [2, 7], "cfapartit": [2, 7, 9], "hold": 2, "extent": [2, 5, 6, 8, 9], "low": 2, "point": [2, 7], "exactli": 2, "1": [2, 5, 6, 8], "second": 2, "fragment_size_per_dim": 2, "non": [2, 9], "pad": 2, "size": [2, 8, 9], "otherwis": [2, 7, 8], "coordin": [2, 9], "system": [2, 9], "j": [2, 9], "k": [2, 9], "number": [2, 5, 7, 8, 9], "associ": [2, 7, 9], "should": [2, 3, 5], "valu": [2, 9], "0": [2, 7, 8], "indic": 2, "rang": [2, 5], "minu": 2, "sinc": [2, 7], "we": [2, 5, 7], "start": 2, "zero": 2, "_array_spac": 2, "fragment_spac": [2, 9], "total": [2, 9], "formerli": 2, "fragment_array_shap": 2, "fragment_posit": 2, "singl": [2, 7], "fragment_shap": 2, "real": [2, 7], "frag_po": 2, "frag_shap": 2, "identifi": [2, 9], "posit": [2, 8, 9], "iter": 2, "nfrags_per_dim": 2, "fragmented_dim_index": 2, "2": 2, "etc": 2, "axi": 2, "fragment_info": [2, 9], "dictionari": 2, "metadata": [2, 5, 9], "kei": [2, 3, 5, 9], "constructor_shap": 2, "full": 2, "e": [2, 8], "have": [2, 5, 7], "same": [2, 3], "effici": [2, 5], "wai": [2, 3, 7, 8], "though": 2, "could": 2, "get_loc": 2, "address": [2, 8, 9], "locat": [2, 5, 7, 8, 9], "doe": [3, 8], "other": [3, 5, 7, 8, 9], "like": [3, 5, 7, 8, 9], "python": [3, 4, 5, 7], "enclos": 3, "typic": [3, 5, 6], "call": [3, 5, 7], "final": [3, 7], "share": [3, 8], "between": [3, 4], "access": [3, 4, 5, 9], "vital": 3, "particular": [3, 5, 9], "link": 3, "order": [3, 7, 8], "facilit": 3, "small": [3, 7], "chang": [3, 7], "netcdf4arraywrapp": 3, "attempt": [3, 8, 9], "made": [3, 5, 8], "first": [3, 5, 7, 8], "unsuccess": 3, "variablewrapp": 3, "prop_set": 3, "wrapper": [3, 4, 7], "base": [3, 5, 6, 8, 9], "request": 3, "combin": [3, 7, 8], "dict_kei": 3, "var_set": 3, "ds_set": 3, "bypass": 3, "issu": 3, "outsid": 3, "ignor": [3, 8], "add": [4, 7, 9], "modul": [4, 7], "follow": [4, 6, 7, 8, 9], "properli": 4, "format": [4, 5, 7, 8], "distribut": [4, 7], "your": [4, 7], "lazili": 4, "reqir": 4, "plot": [4, 7], "support": [4, 6, 8, 9], "limit": 4, "local": [4, 8], "futur": [4, 7, 8], "um": 4, "pp": 4, "s3": [4, 5], "interfac": 4, "storag": [4, 5, 6], "inspir": [4, 7], "overview": 4, "fragment": [4, 5, 6, 8, 9], "partit": [4, 6, 7, 9], "chunk": [4, 5, 6, 7, 8, 9], "backend": [4, 7, 9], "entrypoint": 4, "search": 4, "being": [4, 5, 7, 9], "joint": 4, "project": [4, 5], "centr": 4, "environment": 4, "analysi": [4, 5], "ceda": [4, 5, 7], "nca": 4, "model": 4, "servic": [4, 5], "team": 4, "cm": 4, "need": 5, "cloud": [5, 7], "readi": 5, "increas": 5, "due": 5, "high": 5, "demand": 5, "nativ": 5, "applic": [5, 7], "wider": 5, "usabl": 5, "insuffici": 5, "especi": 5, "volum": 5, "variou": 5, "oper": [5, 7, 8], "jasmin": 5, "facil": 5, "2024": [5, 7], "more": [5, 6, 7, 8], "than": [5, 7], "30": 5, "petabyt": 5, "ingest": 5, "daili": 5, "around": 5, "25": 5, "hdf": 5, "well": 5, "hpc": 5, "architectur": 5, "do": [5, 7], "reader": 5, "exampl": [5, 7], "direct": 5, "abl": 5, "serv": [5, 8, 9], "via": [5, 7], "download": 5, "without": 5, "aim": 5, "make": 5, "effect": 5, "vast": 5, "librari": [5, 7], "platform": 5, "necessarili": 5, "possibl": 5, "avoid": 5, "gb": 5, "tb": 5, "copi": [5, 8, 9], "site": 5, "instruct": 5, "read": [5, 7], "rather": [5, 7], "onc": 5, "remot": [5, 8], "cof": 5, "just": [5, 9], "zarr": [5, 7], "kerchunk": [5, 7], "diagram": [5, 6], "binari": 5, "encod": [5, 7], "memori": [5, 7], "how": 5, "subsequ": [5, 8], "appropri": 5, "similarli": 5, "pointer": 5, "howev": 5, "exist": 5, "separ": 5, "element": 5, "act": [5, 7], "byte": 5, "compress": 5, "uncompress": 5, "version": [5, 7, 8], "12": [5, 6, 7], "novemb": [5, 7], "interpret": 5, "subset": [5, 9], "xr": 6, "cfa_fil": 6, "normal": 6, "syntax": 6, "sub": 6, "disabl": 6, "default": 6, "replac": [6, 8], "you": [6, 7], "still": [6, 7], "get": [6, 8, 9], "better": 6, "becaus": 6, "account": 6, "underli": 6, "regim": 6, "detail": [6, 7], "regist": 7, "avail": 7, "instal": [7, 8], "virtual": 7, "environ": 7, "collect": 7, "import": 7, "feed": [7, 9], "output": 7, "back": 7, "There": 7, "basic": [7, 8, 9], "overrid": 7, "larg": 7, "later": 7, "parent": 7, "present": 7, "complic": 7, "come": 7, "isn": 7, "t": 7, "immedi": 7, "upon": 7, "At": 7, "what": 7, "look": 7, "higher": [7, 8, 9], "math": 7, "thing": 7, "thei": 7, "arraylik": [7, 8, 9], "superlazyarraylik": [7, 8], "while": 7, "mere": 7, "children": 7, "done": 7, "select": [7, 9], "section": [7, 9], "numpi": 7, "slice": [7, 8, 9], "latest": 7, "ensur": [7, 9], "minim": 7, "amount": 7, "befor": 7, "appli": [7, 8, 9], "abstract": 7, "simpl": [7, 8], "command": 7, "built": 7, "becom": 7, "yet": 7, "reduct": 7, "entir": 7, "stage": 7, "optim": 7, "about": 7, "saturncloud": 7, "blog": 7, "visit": 7, "document": 7, "our": 7, "6": 7, "ad": 7, "minor": 7, "find": 7, "out": [7, 9], "padocc": 7, "pipelin": 7, "capabl": 7, "py": 8, "script": 8, "xarrayact": 8, "It": 8, "its": [8, 9], "own": [8, 9], "manual": 8, "updat": 8, "keep": 8, "track": 8, "sophist": 8, "manner": 8, "unit": [8, 9], "dtype": [8, 9], "deriv": 8, "fix": 8, "alter": 8, "runtim": 8, "ndim": 8, "new": [8, 9], "inheritor": 8, "get_kwarg": [8, 9], "initi": [8, 9], "named_dim": [8, 9], "superlazi": 8, "surfac": 8, "instanti": [8, 9], "_shape": 8, "newext": 8, "overwrit": 8, "best": 8, "filenam": [8, 9], "activechunk": 8, "mechan": [8, 9], "prioriti": 8, "behav": 9, "referenc": 9, "essenti": 9, "constructor": 9, "initialis": 9, "origin": 9, "usual": 9, "global_ext": 9, "equat": 9, "eg": 9, "datatyp": 9, "activ": 9, "__getitem__": 9, "__array__": 9, "occur": 9, "soon": 9, "info": 9, "cfachunkwrapp": 9, "descript": 9, "brand": 9, "fall": 9, "pair": 9, "alreadi": 9, "segment": 9, "fit": 9, "aggregated_unit": 9, "aggregated_calendar": 9, "extend": 9, "hierarchi": 9, "expect": 9, "receiv": 9, "equal": 9, "post": 9, "process": 9, "cfunit": 9, "conform": 9}, "objects": {"CFAPyX": [[0, 0, 0, "-", "backend"], [1, 0, 0, "-", "datastore"], [3, 0, 0, "-", "group"], [8, 0, 0, "-", "partition"], [9, 0, 0, "-", "wrappers"]], "CFAPyX.backend": [[0, 1, 1, "", "CFANetCDFBackendEntrypoint"], [0, 1, 1, "", "CFAStoreBackendEntrypoint"], [0, 3, 1, "", "open_cfa_dataset"]], "CFAPyX.backend.CFANetCDFBackendEntrypoint": [[0, 2, 1, "", "open_dataset"]], "CFAPyX.backend.CFAStoreBackendEntrypoint": [[0, 2, 1, "", "open_dataset"]], "CFAPyX.datastore": [[1, 1, 1, "", "CFADataStore"]], "CFAPyX.datastore.CFADataStore": [[1, 4, 1, "", "active_options"], [1, 4, 1, "", "cfa_options"], [1, 2, 1, "", "get_attrs"], [1, 2, 1, "", "get_variables"], [1, 2, 1, "", "open_cfa_variable"], [1, 2, 1, "", "open_variable"], [1, 2, 1, "", "perform_decoding"]], "CFAPyX.group": [[3, 1, 1, "", "CFAGroupWrapper"], [3, 1, 1, "", "VariableWrapper"]], "CFAPyX.group.VariableWrapper": [[3, 2, 1, "", "keys"]], "CFAPyX.partition": [[8, 1, 1, "", "ArrayLike"], [8, 1, 1, "", "ArrayPartition"], [8, 1, 1, "", "SuperLazyArrayLike"]], "CFAPyX.partition.ArrayLike": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "get_kwargs"], [8, 4, 1, "", "ndim"], [8, 4, 1, "", "size"]], "CFAPyX.partition.ArrayPartition": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "get_kwargs"], [8, 2, 1, "", "open"]], "CFAPyX.partition.SuperLazyArrayLike": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "get_kwargs"], [8, 4, 1, "", "shape"]], "CFAPyX.wrappers": [[9, 1, 1, "", "CFAChunkWrapper"], [9, 1, 1, "", "CFAPartition"], [9, 1, 1, "", "FragmentArrayWrapper"]], "CFAPyX.wrappers.CFAChunkWrapper": [[9, 2, 1, "", "__init__"], [9, 5, 1, "", "description"]], "CFAPyX.wrappers.CFAPartition": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "get_kwargs"]], "CFAPyX.wrappers.FragmentArrayWrapper": [[9, 2, 1, "", "__array__"], [9, 2, 1, "", "__getitem__"], [9, 2, 1, "", "__init__"], [9, 4, 1, "", "active_options"], [9, 4, 1, "", "cfa_options"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"xarrai": [0, 1, 7], "backend": 0, "entrypoint": [0, 7], "cfapyx": [0, 2, 3, 4, 6], "cfa": [1, 5, 7, 8, 9], "datastor": [1, 7], "terminologi": 2, "fragment": [2, 7], "chunk": 2, "partit": [2, 8], "term": 2, "handl": 3, "netcdf4": 3, "group": 3, "document": 4, "detail": 4, "api": 4, "refer": 4, "indic": 4, "tabl": 4, "acknowledg": 4, "distribut": 5, "data": [5, 7], "archiv": 5, "cf": 5, "aggreg": 5, "usag": 6, "option": 6, "The": 7, "engin": 7, "1": 7, "2": 7, "3": 7, "from": 7, "4": 7, "result": 7, "arrai": 9, "wrapper": 9, "class": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Xarray Backend Entrypoint for CFAPyX": [[0, "module-CFAPyX.backend"]], "CFA Datastore in Xarray": [[1, "module-CFAPyX.datastore"]], "CFAPyX Terminology": [[2, "cfapyx-terminology"]], "Fragments, Chunks and Partitions": [[2, "fragments-chunks-and-partitions"]], "Terms in CFAPyX": [[2, "terms-in-cfapyx"]], "Handling netCDF4 Groups in CFAPyX": [[3, "handling-netcdf4-groups-in-cfapyx"]], "CFAPyX Documentation": [[4, "cfapyx-documentation"]], "Details:": [[4, null]], "API Reference": [[4, null]], "Indices and Tables": [[4, "indices-and-tables"]], "Acknowledgements": [[4, "acknowledgements"]], "CFA and Distributed Data": [[5, "cfa-and-distributed-data"]], "Data Archives": [[5, "data-archives"]], "Distributed Data": [[5, "distributed-data"]], "CF aggregations": [[5, "cf-aggregations"]], "CFAPyX Usage and Options": [[6, "cfapyx-usage-and-options"]], "The CFA-Xarray Engine": [[7, "the-cfa-xarray-engine"]], "1. Entrypoint": [[7, "entrypoint"]], "2. Datastore": [[7, "datastore"]], "3. Data from Fragments": [[7, "data-from-fragments"]], "4. Result": [[7, "result"]], "CFA Partitions": [[8, "cfa-partitions"]], "CFA Array Wrapper Classes": [[9, "module-CFAPyX.wrappers"]]}, "indexentries": {"cfanetcdfbackendentrypoint (class in cfapyx.backend)": [[0, "CFAPyX.backend.CFANetCDFBackendEntrypoint"]], "cfapyx.backend": [[0, "module-CFAPyX.backend"]], "cfastorebackendentrypoint (class in cfapyx.backend)": [[0, "CFAPyX.backend.CFAStoreBackendEntrypoint"]], "module": [[0, "module-CFAPyX.backend"], [1, "module-CFAPyX.datastore"], [3, "module-CFAPyX.group"], [8, "module-CFAPyX.partition"], [9, "module-CFAPyX.wrappers"]], "open_cfa_dataset() (in module cfapyx.backend)": [[0, "CFAPyX.backend.open_cfa_dataset"]], "open_dataset() (cfapyx.backend.cfanetcdfbackendentrypoint method)": [[0, "CFAPyX.backend.CFANetCDFBackendEntrypoint.open_dataset"]], "open_dataset() (cfapyx.backend.cfastorebackendentrypoint method)": [[0, "CFAPyX.backend.CFAStoreBackendEntrypoint.open_dataset"]], "cfadatastore (class in cfapyx.datastore)": [[1, "CFAPyX.datastore.CFADataStore"]], "cfapyx.datastore": [[1, "module-CFAPyX.datastore"]], "active_options (cfapyx.datastore.cfadatastore property)": [[1, "CFAPyX.datastore.CFADataStore.active_options"]], "cfa_options (cfapyx.datastore.cfadatastore property)": [[1, "CFAPyX.datastore.CFADataStore.cfa_options"]], "get_attrs() (cfapyx.datastore.cfadatastore method)": [[1, "CFAPyX.datastore.CFADataStore.get_attrs"]], "get_variables() (cfapyx.datastore.cfadatastore method)": [[1, "CFAPyX.datastore.CFADataStore.get_variables"]], "open_cfa_variable() (cfapyx.datastore.cfadatastore method)": [[1, "CFAPyX.datastore.CFADataStore.open_cfa_variable"]], "open_variable() (cfapyx.datastore.cfadatastore method)": [[1, "CFAPyX.datastore.CFADataStore.open_variable"]], "perform_decoding() (cfapyx.datastore.cfadatastore method)": [[1, "CFAPyX.datastore.CFADataStore.perform_decoding"]], "cfagroupwrapper (class in cfapyx.group)": [[3, "CFAPyX.group.CFAGroupWrapper"]], "cfapyx.group": [[3, "module-CFAPyX.group"]], "variablewrapper (class in cfapyx.group)": [[3, "CFAPyX.group.VariableWrapper"]], "keys() (cfapyx.group.variablewrapper method)": [[3, "CFAPyX.group.VariableWrapper.keys"]], "arraylike (class in cfapyx.partition)": [[8, "CFAPyX.partition.ArrayLike"]], "arraypartition (class in cfapyx.partition)": [[8, "CFAPyX.partition.ArrayPartition"]], "cfapyx.partition": [[8, "module-CFAPyX.partition"]], "superlazyarraylike (class in cfapyx.partition)": [[8, "CFAPyX.partition.SuperLazyArrayLike"]], "copy() (cfapyx.partition.arraylike method)": [[8, "CFAPyX.partition.ArrayLike.copy"]], "copy() (cfapyx.partition.arraypartition method)": [[8, "CFAPyX.partition.ArrayPartition.copy"]], "copy() (cfapyx.partition.superlazyarraylike method)": [[8, "CFAPyX.partition.SuperLazyArrayLike.copy"]], "get_kwargs() (cfapyx.partition.arraylike method)": [[8, "CFAPyX.partition.ArrayLike.get_kwargs"]], "get_kwargs() (cfapyx.partition.arraypartition method)": [[8, "CFAPyX.partition.ArrayPartition.get_kwargs"]], "get_kwargs() (cfapyx.partition.superlazyarraylike method)": [[8, "CFAPyX.partition.SuperLazyArrayLike.get_kwargs"]], "ndim (cfapyx.partition.arraylike property)": [[8, "CFAPyX.partition.ArrayLike.ndim"]], "open() (cfapyx.partition.arraypartition method)": [[8, "CFAPyX.partition.ArrayPartition.open"]], "shape (cfapyx.partition.superlazyarraylike property)": [[8, "CFAPyX.partition.SuperLazyArrayLike.shape"]], "size (cfapyx.partition.arraylike property)": [[8, "CFAPyX.partition.ArrayLike.size"]], "cfachunkwrapper (class in cfapyx.wrappers)": [[9, "CFAPyX.wrappers.CFAChunkWrapper"]], "cfapartition (class in cfapyx.wrappers)": [[9, "CFAPyX.wrappers.CFAPartition"]], "cfapyx.wrappers": [[9, "module-CFAPyX.wrappers"]], "fragmentarraywrapper (class in cfapyx.wrappers)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper"]], "__array__() (cfapyx.wrappers.fragmentarraywrapper method)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper.__array__"]], "__getitem__() (cfapyx.wrappers.fragmentarraywrapper method)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper.__getitem__"]], "__init__() (cfapyx.wrappers.cfachunkwrapper method)": [[9, "CFAPyX.wrappers.CFAChunkWrapper.__init__"]], "__init__() (cfapyx.wrappers.cfapartition method)": [[9, "CFAPyX.wrappers.CFAPartition.__init__"]], "__init__() (cfapyx.wrappers.fragmentarraywrapper method)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper.__init__"]], "active_options (cfapyx.wrappers.fragmentarraywrapper property)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper.active_options"]], "cfa_options (cfapyx.wrappers.fragmentarraywrapper property)": [[9, "CFAPyX.wrappers.FragmentArrayWrapper.cfa_options"]], "copy() (cfapyx.wrappers.cfapartition method)": [[9, "CFAPyX.wrappers.CFAPartition.copy"]], "description (cfapyx.wrappers.cfachunkwrapper attribute)": [[9, "CFAPyX.wrappers.CFAChunkWrapper.description"]], "get_kwargs() (cfapyx.wrappers.cfapartition method)": [[9, "CFAPyX.wrappers.CFAPartition.get_kwargs"]]}})